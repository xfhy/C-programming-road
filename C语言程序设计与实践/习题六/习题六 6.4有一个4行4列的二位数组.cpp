/*
2015年4月17日15:39:34
习题六 6.4有一个4行4列的二位数组组成的矩阵(其元素可以自己先定义) 
*/
# include <stdio.h>

void out(int *a)     //用指针输出原数组 
{
	int i,j=0;
	for(i=0; i<16; i++)
	{
		printf("%4d",a[i]);     //这里a[i]也可以替换成*(a+i) 
		j++;          //记录输出元素个数 
		if(j%4==0)   //当每行输出4个元素的时候就换行 
		  printf("\n");
	}
}

int main(void)
{
	int a[4][4] = {{12,45,78,25},
	               {25,26,29,65},
	               {78,32,87,83},
	               {95,24,35,54},
				   }; 
	int i,j;
	printf("原数组为:\n"); 
	out((int*)a);   //这里(int*)a  将地址强制转换成(int*)类型
	
	/*-------找最大最小-----------*/ 
	printf("1)找最大最小\n"); 
	int max,min;
	max = a[0][0];   //先假设a[0][0]为最大或者最小 
	min = a[0][0];
	for(i=0; i<4; i++)  //循环控制 
	{
		for(j=0; j<4; j++)
		{
			if(a[i][j]>max)   //遇到比max大的就把它的值赋值给max 
			{
				max = a[i][j]; 
			}
			if(a[i][j]<min)
			{
				min = a[i][j]; 
			}
		}
	}
	printf("   最大的数:%d  最小的数:%d  \n",max,min); 
	
	/*------求对角线元素之和---------*/
	printf("\n2)求对角线元素之和\n");
	int sum=0;
	for(i=0; i<4; i++)
	{
		for(j=0; j<4; j++)
		{
			if(i+j==3)   //观察数组知对角线上的元素行和列之和==3,或者 行==列 
			  sum+=a[i][j];
			if(i==j)
			  sum+=a[i][j]; 
		}
	} 
	printf("   对角线之和为:%d\n",sum);
	
	/*---------求所有的一行之和与一列之和------------*/
	printf("\n3)求所有的一行之和与一列之和\n");
	sum = 0;   //上面sum已有值,so 清零 
	for(i=0; i<4;i++)  //控制行 
	{
		for(j=0; j<4; j++)  //控制列 
		{
			sum+=a[i][j];     //当i==0时,加起来的为第一行的元素,以此类推 
		}
		printf("第%d行的元素之和为%d\n",i+1,sum);
		sum = 0;   //每次使用sum之前记得清零,不然会加多了 
	} 
	sum = 0;  //上面sum已有值,so 清零 
	for(j=0; j<4;j++)  //现在先控制列,再控制行 
	{
		for(i=0; i<4; i++)
		{
			sum+=a[i][j];
		}
		printf("第%d列的元素之和为%d\n",j+1,sum);
		sum = 0;
	} 
	
	/*---------求此矩阵的转置------------*/
	printf("\n4)求此矩阵的转置\n");
	for(j=0; j<4; j++)
	{
		for(i=0; i<4; i++)
		{
			printf("%4d",a[i][j]);
		}
		printf("\n");
	} 
	
	/*---------求此矩阵外围所有元素之和------------*/
	printf("\n5)求此矩阵外围所有元素之和\n"); 
	sum = 0;
	for(i=0; i<4;i++)
	{
		for(j=0; j<4; j++)
		{
			if(i==0)        //第一行 
			  sum+=a[i][j];
			else if(j==0)   //第一列 
			  sum+=a[i][j];
			else if(i==3)   //最后一行 
			  sum+=a[i][j];
			else if(j==3)   //最后一列 
			  sum+=a[i][j]; 
		}
	}
	printf("外围之和为:%d\n",sum);
	
	return 0; 
} 
